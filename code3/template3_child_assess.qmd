
<!-- This child doc will, unless otherwise specified, -->
<!-- inherit all of the formatting of the parent qmd -->


## Methods

The original MadLib prompt was reformmated into a `.qmd` (Fig. @fig-madlib). 

```{r}
#| label: fig-madlib
#| fig-cap: "The original MadLib prompt. "

knitr::include_graphics(here::here("img","madlib_pirate.png"))
```

## Results: What kinds of responces did users submit?

Collectively, the google form had `r nrow(dat0)` responses (Table @tab-madlib-resp). 

```{r}
#| label: tab-madlib-resp
#| fig-cap: "The raw google form responces. "

library(gt)
gt(dat)
```

In the below word cloud, we see if there were any common responses across enteries (fig. @fig-madlib-wordcloud). 

```{r}
#| label: fig-madlib-wordcloud
#| fig-cap: "Wordcloud of MadLib google form responces. "

# https://towardsdatascience.com/create-a-word-cloud-with-r-bde3e7422e8a

# Install libraries ------------------------------------------------------------
PKG <- c(
  "wordcloud", 
  "wordcloud2"
)

for (p in PKG) { # this loops through each package, 
  if(!require(p,character.only = TRUE)) {  # checks to see if you have the package installed
    install.packages(p, verbose = FALSE) # installs the package if it is not installed
    require(p,character.only = TRUE)} # and loads the package library
}

# Wrangle Data -----------------------------------------------------------------

dat1 <- data.frame(
  table( # find frequency of terms used
    unlist( # slightly transform input data
      dat0[,-c(1:2)]))) # remove Timestamp and Author columns
names(dat1) <- c("words", "Freq")

# Create figure -----------------------------------------------------------------
wordcloud::wordcloud(words = as.character(dat1$words), 
          freq = as.numeric(dat1$Freq), 
          min.freq = 1,
          scale = c(1,3),
          max.words=200,
          random.order=FALSE, 
          rot.per=0.35 )
```
